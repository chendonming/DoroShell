name: CI / Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  build:
    name: Build and package
    permissions:
      contents: write
    strategy:
      matrix:
        node-version: [20]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Write-Host "Cleaning node_modules if present"
          if (Test-Path node_modules) { Remove-Item node_modules -Recurse -Force -ErrorAction SilentlyContinue }
          Write-Host "Setting npm unsafe-perm to true to allow native builds"
          npm config set unsafe-perm true
          Write-Host "Installing dependencies"
          npm ci --no-audit --no-fund

      - name: Install dependencies (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          npm ci --no-audit --no-fund

      - name: Package (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        run: |
          # build renderer/node then package without auto-publish
          npm run build

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: release-assets-windows
          path: |
            dist/**
            out/**

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'release'
    steps:
      - name: Gather dist files
        run: |
          echo "Collecting dist/** files into release_artifacts/"
          mkdir -p release_artifacts
          # copy any dist or out files produced by Windows build
          if [ -d windows_artifacts ]; then
            find windows_artifacts -type f -path '*/dist/*' -exec cp --parents {} release_artifacts/ \; || true
            find windows_artifacts -type f -path '*/out/*' -exec cp --parents {} release_artifacts/ \; || true
          fi
          echo "Collected files:"
          find release_artifacts -maxdepth 5 -type f -print || true
          mkdir -p release_artifacts
          cp -r ./*/dist/* release_artifacts/ 2>/dev/null || true
          echo "Collected files:"
          ls -la release_artifacts || true

      - name: Create Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          prerelease: ${{ contains(github.ref_name, 'beta') }}
          files: |
            release_artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
